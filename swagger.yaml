openapi: 3.0.0
info:
  title: bible
  version: 1.0.0
servers:
  - url: http://localhost:8000
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
paths:
  /auth/signup:
    post:
      tags:
        - default
      summary: signup
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: test
                password: Test@123457
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User signed up successfully."
                  user:
                    type: string
                    example: "test123"

  /auth/login:
    post:
      tags:
        - default
      summary: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: test123
                password: Test@123457
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Login successful"
                  accessToken:
                    type: string
                    example: "eyJraWQiOiI0bis0SEE0ZlBxcDQ3M3JUNTBMOUhuMngzdzJEOHZhbFl6bVJBV3h6TlZnPS"
                  idToken:
                    type: string
                    example: "F90aW1lIjoxNzI2NjYxNzQ4LCJpc3MiOiJodHRwczpcL1wvYM2HY-"
                  refreshToken:
                    type: string
                    example: "bxlZqxoKIBFtZIYpva2JUsoO3zfx23jV6FKw_cN7G4UkgOh4YXw6g69JcAVPtmSET1dne0E5zkPh"

  /user/info:
    get:
      tags:
        - default
      summary: get user info
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "410fc266-451a-4dfd-9fd5-1924b252cb4c"
                  username:
                    type: string
                    example: "test123"

  /tasks:
    post:
      tags:
        - default
      summary: create task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "test"
                description:
                  type: string
                  example: "test"
              required:
                - title
                - description
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Task created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "57a03c45-183b-43b6-bc56-47a621af7d62"
                  title:
                    type: string
                    example: "test"
                  description:
                    type: string
                    example: "test"
                  status:
                    type: string
                    example: "PENDING"
                  createdAt:
                    type: string
                    format: date-time
                    example: "2024-09-18T11:51:41.011Z"
                  updatedAt:
                    type: string
                    format: date-time
                    example: "2024-09-18T11:51:41.011Z"
    get:
      tags:
        - default
      summary: get all tasks
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of all tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "803f836d-d469-45d2-9616-e9cc6bd64087"
                    title:
                      type: string
                      example: "test"
                    description:
                      type: string
                      example: "test"
                    status:
                      type: string
                      example: "PENDING"
                    createdAt:
                      type: string
                      format: date-time
                      example: "2024-09-18T15:01:14.889Z"
                    updatedAt:
                      type: string
                      format: date-time
                      example: "2024-09-18T15:01:14.889Z"

  /tasks/{taskId}:
    get:
      tags:
        - default
      summary: get task by id
      security:
        - bearerAuth: []
      parameters:
        - name: taskId
          in: path
          required: true
          description: The ID of the task to retrieve
          schema:
            type: string
      responses:
        "200":
          description: Task retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "57a03c45-183b-43b6-bc56-47a621af7d62"
                  title:
                    type: string
                    example: "test"
                  description:
                    type: string
                    example: "test"
                  status:
                    type: string
                    example: "PENDING"
                  createdAt:
                    type: string
                    format: date-time
                    example: "2024-09-18T11:51:41.011Z"
                  updatedAt:
                    type: string
                    format: date-time
                    example: "2024-09-18T11:51:41.011Z"
    delete:
      tags:
        - default
      summary: delete task
      security:
        - bearerAuth: []
      parameters:
        - name: taskId
          in: path
          required: true
          description: The ID of the task to delete
          schema:
            type: string
      responses:
        "200":
          description: Task deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Deleted Successfully"
    put:
      tags:
        - default
      summary: update task
      parameters:
        - name: taskId
          in: path
          required: true
          description: The ID of the task to update
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "test1"
                description:
                  type: string
                  example: "test"
              required:
                - title
                - description
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Task updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "57a03c45-183b-43b6-bc56-47a621af7d62"
                  title:
                    type: string
                    example: "test1"
                  description:
                    type: string
                    example: "test"
                  status:
                    type: string
                    example: "PENDING"
                  createdAt:
                    type: string
                    format: date-time
                    example: "2024-09-18T11:51:41.011Z"
                  updatedAt:
                    type: string
                    format: date-time
                    example: "2024-09-18T11:52:55.887Z"

  /api/emails:
    get:
      tags:
        - default
      summary: get emails
      security:
        - bearerAuth: []
      parameters:
        - name: pageSize
          in: query
          schema:
            type: integer
            example: 10
      responses:
        "200":
          description: List of emails retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "c00aef14-9787-42eb-b46e-b24941b7627f"
                    email:
                      type: string
                      example: "user@example.com"
                    status:
                      type: string
                      example: "SENT"
                    createdAt:
                      type: string
                      format: date-time
                      example: "2024-09-18T11:52:55.887Z"
